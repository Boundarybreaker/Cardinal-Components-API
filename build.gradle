plugins {
    id "fabric-loom" version "0.2.4-SNAPSHOT"
    id "com.matthewprenger.cursegradle" version "1.2.0"
    id "maven-publish"
    // TODO add code quality plugin
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

group = "com.github.NerdHubMC"
archivesBaseName = "Cardinal-Components-API"
version = System.getenv("TRAVIS_TAG") ?: project.mod_version

sourceSets {
    testmod {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
    }
}

repositories {
    maven {
        name = "FabricMC"
        url = "https://maven.fabricmc.net"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings "net.fabricmc:yarn:${minecraft_version}+build.${yarn_mappings}"
    modImplementation "net.fabricmc:fabric-loader:${loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api-base:${fabric_base_version}"
    include "net.fabricmc.fabric-api:fabric-api-base:${fabric_base_version}"
    // used by the test mod
    modRuntime "net.fabricmc.fabric-api:fabric-resource-loader:${fabric_resource_loader_version}"

    testmodImplementation sourceSets.main.output
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.5.0-M1"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.5.0-M1"
}

jar {
    exclude "nerdhub/cardinal/components/testmod/**"
}

//task apiJar(type: Jar, dependsOn: classes) {
//    onlyIf {
//        project.hasProperty("api_package")
//    }
//    from(sourceSets.main.allJava) {
//        include String.valueOf(findProperty("api_package")).replace('.', '/') + "/**"
//    }
//    from "LICENSE.md"
//    manifest.mainAttributes(
//            "Implementation-Title": project.archivesBaseName + "-api",
//            "Implementation-Version": project.version,
//            "Maven-Artifact": "${project.group}:${project.name}:${project.version}:api".toLowerCase(Locale.ROOT),
//            "Built-On-Minecraft": project.minecraft_version,
//            "Built-On-Java": "${System.getProperty("java.vm.version")} (${System.getProperty("java.vm.vendor")})"
//    )
//    classifier = "api"
//}

//task remapApiJar(type: RemapJar, dependsOn: apiJar) {
//    onlyIf {
//        project.hasProperty("api_package")
//    }
//    jar = apiJar.archiveFile.get().asFile
//}
//
//if (project.hasProperty("api_package")) {
//    tasks.jar.dependsOn project.tasks.getByName("apiJar")
//}

apply from: "https://raw.githubusercontent.com/NerdHubMC/Gradle-Scripts/master/scripts/fabric/basic_project.gradle"

processResources {
    // this will ensure that this task is redone when there"s a change
    inputs.property "version", project.version

    // replace stuff in fabric.mod.json, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"

        // add mod metadata
        expand "version": project.version
    }

    // copy everything else, that"s not the fabric.mod.json
    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}
